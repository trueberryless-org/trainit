@page "/viewworkouts"

<PageTitle>Workout View</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudStack Spacing="8">
                <div>
                    <h1 class="ms-4">Workouts</h1>
                    <h5 class="ms-4">Count: @(Workouts != null ? Workouts.Count : 0)</h5>
                </div>
                <MudDivider/>
            </MudStack>

            <DataInit Data="Workouts">
                <ChildContent Context="workouts">
                    <MudList Clickable="true">
                        @foreach (var workout in workouts)
                        {
                            <MudListItem OnClick="() => NavigateToDetailedView(workout.Id)">
                                <MudGrid Style="min-height: 4rem;">
                                    <MudItem xs="10" Style="display: flex; align-items: center;">
                                        @workout.Name
                                    </MudItem>
                                    <MudItem xs="2" Style="display: flex; align-items: center; justify-content: end">
                                        <MudIconButton Icon="@Icons.Filled.Edit" OnClick="() => EditWorkout(workout.Id)"/>
                                    </MudItem>
                                </MudGrid>
                            </MudListItem>
                        }
                    </MudList>

                    <div Style="position: fixed; bottom: 13vh; right: 2vh; display: grid; gap: 1rem;">
                        <MudFab Color="Color.Info" StartIcon="@Icons.Material.Filled.Add" OnClick="NewWorkout"/>
                    </div>

                </ChildContent>
            </DataInit>
        </MudContainer>
    </Authorized>
</AuthorizeView>

@code {

    [Inject]
    private IDialogService DialogService { get; set; }

    List<Workout> Workouts { get; set; } = null!;

    void EditWorkout(int workoutId)
    {
        NavigationManager.NavigateTo($"{NavigationProvider["EditWorkout"].Link}/{workoutId}");
    }

    void NavigateToDetailedView(int workoutId)
    {
        NavigationManager.NavigateTo($"{NavigationProvider["ViewWorkouts"].Link}/{workoutId}");
    }

    async Task NewWorkout()
    {
        NavigationManager.NavigateTo(NavigationProvider["NewWorkout"].Link);
    }

    protected override async Task OnInitializedAsync()
    {
        if (await UserService.IsAuthenticated())
        {
            Workouts = await WorkoutRepository.GetWorkoutsByUser(UserService.CurrentUser!.Id);
        }
    }

}