@page "/viewworkouts/{WorkoutId:int}"

<PageTitle>Workout View</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">

            <MudStack Spacing="8">
                <div>
                    <h1 class="ms-4">
                        Workout: 
                        @if (Workout != null)
                        {
                            @Workout.Name
                        }
                    </h1>
                    <h5 class="ms-4">Count: @(Exercises != null ? Exercises.Count : 0)</h5>
                </div>

                <MudDivider/>
            </MudStack>

            <DataInit Data="Exercises">
                <ChildContent Context="exercises">
                    <MudList Clickable="true">
                        @foreach (var exercise in exercises)
                        {
                            <MudListItem>
                                <MudGrid Style="min-height: 4rem;">
                                    <MudItem xs="10" Style="display: flex; align-items: center;">
                                        @exercise.Name
                                    </MudItem>
                                    <MudItem xs="2" Style="display: flex; align-items: center; justify-content: end">
                                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="() => EditExercise(exercise.Id)"/>
                                    </MudItem>
                                </MudGrid>

                            </MudListItem>
                        }
                    </MudList>
                </ChildContent>
            </DataInit>

        </MudContainer>

        <div Style="position: fixed; bottom: 13vh; right: 2vh;">
            <MudFab Color="Color.Info" StartIcon="@Icons.Material.Filled.Add" OnClick="NewExercise"/>
        </div>

    </Authorized>
</AuthorizeView>


@code {

    [Inject]
    private IDialogService DialogService { get; set; }

    [Parameter]
    public int? WorkoutId { get; set; }

    Workout? Workout { get; set; }

    List<Exercise> Exercises { get; set; } = null!;

    void EditExercise(int exerciseId)
    {
        NavigationManager.NavigateTo($"{NavigationProvider["EditExercise"].Link}/{exerciseId}");
    }

    async Task NewExercise()
    {
        NavigationManager.NavigateTo(NavigationProvider["NewExercise"].Link);
    }

    protected override async Task OnInitializedAsync()
    {
        if (await UserService.IsAuthenticated())
        {
            Workout = await WorkoutRepository.GetWorkoutById(WorkoutId.Value);
            Exercises = await ExerciseRepository.GetExercisesByWorkout(WorkoutId.Value);

            foreach (var exercise in Exercises)
            {
                exercise.IsSelected = true;
            }
        }
    }

}