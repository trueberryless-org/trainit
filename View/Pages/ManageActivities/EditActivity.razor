@page "/editactivity/{ActivityId:int}"
@using Activity = Model.Entities.per_User.Activity

<PageTitle>Edit Activity</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudStack Spacing="4">
                <h1 class="ms-4 mb-12">Edit Activity</h1>

                <MudForm>
                    <MudStack Spacing="4">

                        <MudPaper class="pa-4" Elevation="3">
                            <DataInit Data="Exercise">
                                <ChildContent Context="exercise">
                                    <MudStack Spacing="3">
                                        <MudTextField @bind-Value="exercise.Name" Label="Name" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.TextFormat" AdornmentColor="Color.Secondary"
                                                      Counter="100" MaxLength="100"
                                                      Immediate="true"/>
                                        <MudTextField @bind-Value="exercise.MachineAsset.Name" Label="Machine" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.FitnessCenter" AdornmentColor="Color.Secondary"
                                                      Counter="100" MaxLength="100"
                                                      Immediate="true"/>
                                        <MudTextField @bind-Value="exercise.Description" Label="Description" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Description" AdornmentColor="Color.Secondary"
                                                      Immediate="true"
                                                      Lines="3"/>
                                    </MudStack>
                                </ChildContent>
                            </DataInit>
                        </MudPaper>

                        <MudPaper class="pa-4" Elevation="3">
                            <DataInit Data="Activity">
                                <ChildContent Context="activity">
                                    <MudStack Spacing="3">
                                        <MudTextField @bind-Value="activity.Weight" Label="Weight" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.MonitorWeight" AdornmentColor="Color.Secondary"
                                                      InputMode="InputMode.numeric" InputType="InputType.Text"
                                                      Immediate="true"/>
                                        <MudTextField @bind-Value="activity.Set" Label="Set" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.MonitorWeight" AdornmentColor="Color.Secondary"
                                                      InputMode="InputMode.numeric" InputType="InputType.Text"
                                                      Immediate="true"/>
                                        <MudTextField @bind-Value="activity.Repetition" Label="Repetition" Variant="Variant.Outlined"
                                                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.MonitorWeight" AdornmentColor="Color.Secondary"
                                                      InputMode="InputMode.numeric" InputType="InputType.Text"
                                                      Immediate="true"/>
                                    </MudStack>
                                </ChildContent>
                            </DataInit>
                        </MudPaper>

                    </MudStack>
                </MudForm>
            </MudStack>

            <MudButton class="mt-5" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" FullWidth="true" OnClick="DeleteActivity">Delete Activities</MudButton>

        </MudContainer>

        <div Style="position: fixed; bottom: 13vh; right: 2vh; display: grid; gap: 1rem;">
            <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Check" OnClick="SaveActivityChanges"/>
        </div>

    </Authorized>
</AuthorizeView>


@code {

    [Inject]
    private IDialogService DialogService { get; set; }

    Activity Activity { get; set; } = null!;

    Exercise Exercise { get; set; } = null!;

    [Parameter]
    public int ActivityId { get; set; }

    async Task SaveActivityChanges()
    {
        await ActivityRepository.UpdateAsync(Activity);
        await ExerciseRepository.UpdateAsync(Exercise);
        NavigationManager.NavigateTo(NavigationProvider["ViewActivities"].Link);
    }

    private async void DeleteActivity()
    {
        bool? result = await DialogService.ShowMessageBox(
            "Warning",
            "Deleting can not be undone!",
            yesText: "Delete!", cancelText: "Cancel");

        if (result is true)
        {
            await ActivityRepository.DeleteAsync(Activity);
            NavigationManager.NavigateTo(NavigationProvider["ViewActivities"].Link);
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (!await UserService.IsAuthenticated()) return;

        Activity = await ActivityRepository.GetActivityById(ActivityId);
        Exercise = await ExerciseRepository.GetExerciseByActivity(ActivityId);
    }

}